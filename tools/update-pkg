#!/bin/bash

# SPDX-License-Identifier: GPL-2.0-only
# Copyright (C) 2023-present Team LibreELEC (https://libreelec.tv)

# path to the version file
DISTRIBUTION_PATH="distributions/LibreELEC/version"

# prevents executing from wrong folder
[ -f ${DISTRIBUTION_PATH} ] || { echo "${DISTRIBUTION_PATH}: No such file or directory" && exit; }

# main code
progname=${0}
pkgname=${1}
pkgver=${2}
[ $# -ne 2 ] && { echo "Usage: $0 PKG_NAME PKG_VERSION"; exit 1; }

PACKAGE_LIST="$(find packages -type d -name ${pkgname})/package.mk"
  if [ ! -f "${PACKAGE_LIST}" ]; then
    die "Package not found: ${pkgname}"
  fi

#https://stackoverflow.com/questions/8063228/check-if-a-variable-exists-in-a-list-in-bash
for pkgmk in ${PACKAGE_LIST}
do
  if [[ ! $(grep "^PKG_VERSION=.*get_pkg_version" "${pkgmk}") ]]; then
    # PKG_VERSION does not contain code, proceed
    if [[ ! ${pkgname} = @(cli|demopkg|str3|jellyfin) ]]; then
      # PKG is not in the array
      sed -e "s|^PKG_VERSION=.*|PKG_VERSION=\"${pkgver}\"|" -i "${pkgmk}"
    elif [[ ${pkgname} = @(jellyfin) ]]; then
      sed -e "s|^PKG_VERSION_NUMBER=.*|PKG_VERSION_NUMBER=\"${pkgver}\"|" -i "${pkgmk}"
    fi
  fi
  CHANGE_HASH=yes scripts/get ${pkgname}
  [ ${#pkgver} -eq 40 ] && pkgver="githash ${pkgver:0:7}"

  # update PKG_GIT_COMMIT
  case ${pkgname} in
    cli)
      github_repos="docker/cli"
      ;;
    conmon)
      github_repos="containers/conmon"
      ;;
    containerd)
      github_repos="containerd/containerd"
      ;;
    ctop)
      github_repos="bcicen/ctop"
      ;;
    moby)
      github_repos="moby/moby"
      ;;
    podman-bin)
      github_repos="containers/podman"
      ;;
    runc)
      github_repos="opencontainers/runc"
      ;;
  esac
  if [ ! -z "${github_repos}" ]; then
    tag_object_url=$(curl -m 5 -sL "${github_api_token}" "https://api.github.com/repos/${github_repos}/git/refs/tags/v${pkgver}" | jq -r '.object.url')
    pkggitcommit=$(curl -m 5 -sL "${github_api_token}" "${tag_object_url}" | jq -r '.object.sha')
    [[ "${pkggitcommit}" = "null" ]] && \
      pkggitcommit=$(curl -m 5 -sL "${github_api_token}" "${tag_object_url}" | jq -r '.sha')
    sed -e "s|^export PKG_GIT_COMMIT=.*|export PKG_GIT_COMMIT=\"${pkggitcommit}\"|" -i "${pkgmk}"
  fi

  if [[ ${pkgname} = @(btrfs-progs|rsyslog|syncthing|jellyfin|tinc) ]]; then
    export $(grep "^PKG_REV=" "${pkgmk}" | tr -d '"')
    new_pkg_rev=$(($PKG_REV+1))
    sed -e "s|^PKG_REV=.*|PKG_REV=\"${new_pkg_rev}\"|" -i "${pkgmk}"
    addon=" and addon (${new_pkg_rev})"
  else
    addon=""
  fi

  commit_msg="${pkgname}: update to ${pkgver}${addon}"

  case ${pkgname} in
    cmake)
      commit_msg+="\n\nRelease notes:\n- https://cmake.org/cmake/help/latest/release/index.html"
      ;;
    curl)
      commit_msg+="\n\nRelease notes:\n- https://curl.se/changes.html"
      ;;
    fuse3)
      commit_msg+="\n\nChange log:\n- https://github.com/libfuse/libfuse/blob/master/ChangeLog.rst"
      ;;
    libheif)
      commit_msg+="\n\nRelease notes:\n- https://github.com/strukturag/libheif/releases/tag/v${pkgver}"
      ;;
    openssh)
      commit_msg+="\n\nChange log:\n- https://ftp.openbsd.org/pub/OpenBSD/OpenSSH/portable/ChangeLog"
      commit_msg+="\n\nRelease notes:\n- https://www.openssh.com/releasenotes.html#${pkgver}"
      commit_msg+="\n\nRelease notes:\n- https://www.openssh.com/txt/release-${pkgver}"
      ;;
    openssl)
      commit_msg+="\n\nRelease notes:\n- https://www.openssl.org"
      commit_msg+="\n\nRelease notes:\n- https://www.openssl.org/news/vulnerabilities.html"
      ;;
    pipewire)
      commit_msg+="\n\nNews:\n- https://gitlab.freedesktop.org/pipewire/pipewire/-/blob/master/NEWS"
      ;;
    pycryptodome)
      commit_msg+="\n\nChangelog:\n- https://www.pycryptodome.org/src/changelog"
      ;;
    qemu)
      commit_msg+="\n\nChangelog:\n- https://wiki.qemu.org/ChangeLog"
      ;;
    samba)
      commit_msg+="\n\nRelease notes:\n- https://www.samba.org/samba/history/samba-${pkgver}.html"
      ;;
    systemd)
      commit_msg+="\n\nRelease notes:\n- https://github.com/systemd/systemd/releases"
      ;;
    wireless-regdb)
      commit_msg+="\n\nRelease notes:\n- https://git.kernel.org/pub/scm/linux/kernel/git/wens/wireless-regdb.git"
      ;;
  esac

  printf "${commit_msg}" | git commit -F - ${pkgmk}

  case ${pkgname} in
    moby)
      ${progname} cli ${pkgver}
      ;;
  esac
done
