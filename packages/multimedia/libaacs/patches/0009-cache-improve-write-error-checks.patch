From 125eb6d3ae5a028e91fa36939efbbd8a2a4317c5 Mon Sep 17 00:00:00 2001
From: npzacs <npzacs@gmail.com>
Date: Tue, 1 Mar 2022 11:47:23 +0000
Subject: [PATCH 09/12] cache: improve write error checks

Flushing file to disc before closing.
Remove file if write failed.
---
 src/file/keydbcfg.c | 39 +++++++++++++++++++++++++++++++--------
 1 file changed, 31 insertions(+), 8 deletions(-)

diff --git a/src/file/keydbcfg.c b/src/file/keydbcfg.c
index e5cde01..0880066 100644
--- a/src/file/keydbcfg.c
+++ b/src/file/keydbcfg.c
@@ -40,6 +40,15 @@
 #define MAX_FILE_SIZE  65535
 
 
+static int _file_unlink(const char *file)
+{
+    int result = file_unlink(file);
+    if (result < 0) {
+        BD_DEBUG(DBG_FILE, "Error removing %s\n", file);
+    }
+    return result;
+}
+
 static char *_load_file(AACS_FILE_H *fp)
 {
     char *data = NULL;
@@ -335,7 +344,8 @@ int keycache_save(const char *type, const uint8_t *disc_id, const uint8_t *key,
             if (fp) {
                 str_print_hex(key_str, key, len);
 
-                if (file_write(fp, key_str, len*2) == len*2) {
+                if (file_write(fp, key_str, len*2) == len*2 &&
+                    file_write(fp, key_str, 0) == 0) {
                     BD_DEBUG(DBG_FILE, "Wrote %s to %s\n", type, file);
                     result = 1;
 
@@ -343,8 +353,12 @@ int keycache_save(const char *type, const uint8_t *disc_id, const uint8_t *key,
                     BD_DEBUG(DBG_FILE, "Error writing to %s\n", file);
                 }
 
-
                 file_close(fp);
+
+                if (!result) {
+                    /* remove if write failed */
+                    _file_unlink(file);
+                }
             }
         }
     }
@@ -419,7 +433,8 @@ int cache_save(const char *name, uint32_t version, const void *data, uint32_t le
             if (fp) {
                 if (file_write(fp, &version, 4)   == 4 &&
                     file_write(fp, &len,     4)   == 4 &&
-                    file_write(fp, data,     len) == len) {
+                    file_write(fp, data,     len) == len &&
+                    file_write(fp, data,     0) == 0) {
                     BD_DEBUG(DBG_FILE, "Wrote %d bytes to %s\n", len + 8, file);
                     result = 1;
 
@@ -428,6 +443,11 @@ int cache_save(const char *name, uint32_t version, const void *data, uint32_t le
                 }
 
                 file_close(fp);
+
+                if (!result) {
+                    /* remove if write failed */
+                    _file_unlink(file);
+                }
             }
         }
 
@@ -486,10 +506,7 @@ int cache_remove(const char *name)
     if (!file) {
         return 0;
     }
-    int result = !file_unlink(file);
-    if (!result) {
-        BD_DEBUG(DBG_FILE, "Error removing %s\n", file);
-    }
+    int result = !_file_unlink(file);
     X_FREE(file);
     return result;
 }
@@ -502,7 +519,8 @@ int config_save(const char *name, const void *data, uint32_t len)
 
     if (fp) {
         if (file_write(fp, &len, 4) == 4 &&
-            file_write(fp, data, len) == len) {
+            file_write(fp, data, len) == len &&
+            file_write(fp, data, 0) == 0) {
           BD_DEBUG(DBG_FILE, "Wrote %d bytes to %s\n", len + 4, path);
           result = 1;
 
@@ -511,6 +529,11 @@ int config_save(const char *name, const void *data, uint32_t len)
         }
 
         file_close(fp);
+
+        if (!result) {
+            /* remove if write failed */
+            _file_unlink(path);
+        }
     }
 
     X_FREE(path);
-- 
2.43.0

