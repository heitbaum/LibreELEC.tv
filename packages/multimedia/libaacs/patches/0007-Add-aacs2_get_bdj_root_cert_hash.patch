From e851ee9d50c92392de5738a7de412b1372b8c0f2 Mon Sep 17 00:00:00 2001
From: npzacs <npzacs@gmail.com>
Date: Sun, 6 Mar 2022 03:24:00 +0000
Subject: [PATCH 07/12] Add aacs2_get_bdj_root_cert_hash()

---
 src/examples/aacs_info.c |  8 ++++++--
 src/libaacs/aacs.c       | 12 +++++++++++-
 src/libaacs/aacs.h       |  1 +
 3 files changed, 18 insertions(+), 3 deletions(-)

diff --git a/src/examples/aacs_info.c b/src/examples/aacs_info.c
index 37ca6a5..c6326a9 100644
--- a/src/examples/aacs_info.c
+++ b/src/examples/aacs_info.c
@@ -111,8 +111,9 @@ int main (int argc, char **argv)
     const int      bec  = aacs_get_bus_encryption(aacs);
     const uint8_t *binding_id = aacs_get_device_binding_id(aacs);
     const uint8_t *bdj_hash   = aacs_get_bdj_root_cert_hash(aacs);
+    const uint8_t *bdj_hash_2 = aacs2_get_bdj_root_cert_hash(aacs);
     const uint8_t *cc_id      = aacs_get_content_cert_id(aacs);
-    char           s[41];
+    char           s[65];
 
     printf("Disc ID: %s\n", id  ? _hex2str(s, id,  20) : "???");
     printf("VID    : %s\n", vid ? _hex2str(s, vid, 16) : "???");
@@ -123,7 +124,10 @@ int main (int argc, char **argv)
     printf("  Device support:   %s\n", (bec & AACS_BUS_ENCRYPTION_CAPABLE) ? "yes" : "no");
     printf("  Enabled in media: %s\n", (bec & AACS_BUS_ENCRYPTION_ENABLED) ? "yes" : "no");
     printf("Content Certificate ID: %s\n", cc_id      ? _hex2str(s, cc_id,      6)  : "???");
-    printf("BD-J Root Cert hash:    %s\n", bdj_hash   ? _hex2str(s, bdj_hash,   20) : "???");
+    if (bdj_hash)
+    printf("BD-J Root Cert hash:    %s (SHA1)\n", _hex2str(s, bdj_hash, 20));
+    if (bdj_hash_2)
+    printf("BD-J Root Cert hash:    %s (SHA256)\n", _hex2str(s, bdj_hash_2, 32));
     printf("Device binding ID:      %s\n", binding_id ? _hex2str(s, binding_id, 16) : "???");
 
 
diff --git a/src/libaacs/aacs.c b/src/libaacs/aacs.c
index 221965c..c2e9a15 100644
--- a/src/libaacs/aacs.c
+++ b/src/libaacs/aacs.c
@@ -1506,7 +1506,17 @@ const uint8_t *aacs_get_bdj_root_cert_hash(AACS *aacs)
 {
     if (aacs && aacs->cc) {
         if (!aacs->cc->aacs2) {
-        return aacs->cc->bdj_root_cert_hash;
+            return aacs->cc->bdj_root_cert_hash;
+        }
+    }
+    return NULL;
+}
+
+const uint8_t *aacs2_get_bdj_root_cert_hash(AACS *aacs)
+{
+    if (aacs && aacs->cc) {
+        if (aacs->cc->aacs2) {
+            return aacs->cc->bdj_root_cert_hash;
         }
     }
     return NULL;
diff --git a/src/libaacs/aacs.h b/src/libaacs/aacs.h
index e957622..43e4454 100644
--- a/src/libaacs/aacs.h
+++ b/src/libaacs/aacs.h
@@ -167,6 +167,7 @@ AACS_PUBLIC const uint8_t *aacs_get_pmsn(AACS *aacs); /* may fail even if disc c
 AACS_PUBLIC const uint8_t *aacs_get_mk(AACS *aacs);   /* may fail even if disc can be decrypted */
 AACS_PUBLIC const uint8_t *aacs_get_content_cert_id(AACS *aacs);
 AACS_PUBLIC const uint8_t *aacs_get_bdj_root_cert_hash(AACS *aacs);
+AACS_PUBLIC const uint8_t *aacs2_get_bdj_root_cert_hash(AACS *aacs);
 
 /*
  * AACS Online
-- 
2.43.0

