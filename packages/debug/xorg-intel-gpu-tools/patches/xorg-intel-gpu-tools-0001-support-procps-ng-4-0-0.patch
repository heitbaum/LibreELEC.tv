--- a/meson.build	2021-04-23 10:41:51.220297600 +0000
+++ b/meson.build	2022-04-18 05:11:59.445702212 +0000
@@ -121,7 +121,16 @@
 
 pciaccess = dependency('pciaccess', version : '>=0.10')
 libkmod = dependency('libkmod')
-libprocps = dependency('libprocps', required : true)
+
+# find either procps, procps-ng <= 3.3.x
+libprocps = dependency('libprocps', required : false)
+if libprocps.found()
+  # do something
+else
+  # find procps-ng >= 4.x.x
+  libprocps = dependency('libproc-2', required : true)
+endif
+
 
 libunwind = dependency('libunwind', required : get_option('libunwind'))
 build_info += 'With libunwind: @0@'.format(libunwind.found())
--- a/lib/igt_aux.c	2021-04-23 10:41:51.204297500 +0000
+++ b/lib/igt_aux.c	2022-04-18 07:06:04.775502693 +0000
@@ -51,7 +51,7 @@
 #include <assert.h>
 #include <grp.h>
 
-#include <proc/readproc.h>
+#include <procps/readproc.h>
 #include <libudev.h>
 
 #include "drmtest.h"
@@ -1131,16 +1131,16 @@
 	proc_t *proc_info;
 	bool found = false;
 
-	proc = openproc(PROC_FILLCOM | PROC_FILLSTAT);
+	proc = openproc(PROC_FILLARG | PROC_FILLSTAT);
 	igt_assert(proc != NULL);
 
 	while ((proc_info = readproc(proc, NULL))) {
 		if (!strncasecmp(proc_info->cmd, comm, sizeof(proc_info->cmd))) {
-			freeproc(proc_info);
+			//freeproc(proc_info);
 			found = true;
 			break;
 		}
-		freeproc(proc_info);
+		//freeproc(proc_info);
 	}
 
 	closeproc(proc);
@@ -1165,7 +1165,7 @@
 	proc_t *proc_info;
 	int err = 0;
 
-	proc = openproc(PROC_FILLCOM | PROC_FILLSTAT | PROC_FILLARG);
+	proc = openproc(PROC_FILLSTAT | PROC_FILLARG);
 	igt_assert(proc != NULL);
 
 	while ((proc_info = readproc(proc, NULL))) {
@@ -1174,10 +1174,10 @@
 			if (kill(proc_info->tid, sig) < 0)
 				err = -errno;
 
-			freeproc(proc_info);
+			//freeproc(proc_info);
 			break;
 		}
-		freeproc(proc_info);
+		//freeproc(proc_info);
 	}
 
 	closeproc(proc);
@@ -1334,7 +1334,7 @@
 	struct stat st;
 	int state = 0;
 
-	proc = openproc(PROC_FILLCOM | PROC_FILLSTAT | PROC_FILLARG);
+	proc = openproc(PROC_FILLSTAT | PROC_FILLARG);
 	igt_assert(proc != NULL);
 
 	while ((proc_info = readproc(proc, NULL))) {
@@ -1362,7 +1362,7 @@
 		__igt_lsof_fds(proc_info, &state, path, dir);
 
 		free(name_lnk);
-		freeproc(proc_info);
+		//freeproc(proc_info);
 	}
 
 	closeproc(proc);
