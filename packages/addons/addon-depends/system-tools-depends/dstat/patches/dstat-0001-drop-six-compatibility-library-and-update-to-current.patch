From 9b1d303e6f89457d2149396454833c1d6f9d57d9 Mon Sep 17 00:00:00 2001
From: Rudi Heitbaum <rudi@heitbaum.com>
Date: Mon, 26 Jun 2023 19:11:57 +0000
Subject: [PATCH] drop six compatibility library and update to current
 python3.11
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

change “import collections” to “import collections.abc”
change “collections.Sequence” to “collections.abc.Sequence”
ref:
  https://stackoverflow.com/questions/69596494/unable-to-import-freegames-python-package-attributeerror-module-collections
---
 dstat | 15 +++++++--------
 1 file changed, 7 insertions(+), 8 deletions(-)

diff --git a/dstat b/dstat
index 9359965..73fa5ce 100755
--- a/dstat
+++ b/dstat
@@ -19,7 +19,7 @@
 from __future__ import absolute_import, division, generators, print_function
 __metaclass__ = type
 
-import collections
+import collections.abc
 import fnmatch
 import getopt
 import getpass
@@ -29,7 +29,6 @@ import os
 import re
 import resource
 import sched
-import six
 import sys
 import time
 
@@ -418,14 +417,14 @@ class dstat:
 
     def colwidth(self):
         "Return column width"
-        if isinstance(self.name, six.string_types):
+        if isinstance(self.name, str):
             return self.width
         else:
             return len(self.nick) * self.width + len(self.nick) - 1
 
     def title(self):
         ret = theme['title']
-        if isinstance(self.name, six.string_types):
+        if isinstance(self.name, str):
             width = self.statwidth()
             return ret + self.name[0:width].center(width).replace(' ', '-') + theme['default']
         for i, name in enumerate(self.name):
@@ -440,7 +439,7 @@ class dstat:
 
     def subtitle(self):
         ret = ''
-        if isinstance(self.name, six.string_types):
+        if isinstance(self.name, str):
             for i, nick in enumerate(self.nick):
                 ret = ret + theme['subtitle'] + nick[0:self.width].center(self.width) + theme['default']
                 if i + 1 != len(self.nick): ret = ret + char['space']
@@ -454,7 +453,7 @@ class dstat:
             return ret
 
     def csvtitle(self):
-        if isinstance(self.name, six.string_types):
+        if isinstance(self.name, str):
             return '"' + self.name + '"' + char['sep'] * (len(self.nick) - 1)
         else:
             ret = ''
@@ -465,7 +464,7 @@ class dstat:
 
     def csvsubtitle(self):
         ret = ''
-        if isinstance(self.name, six.string_types):
+        if isinstance(self.name, str):
             for i, nick in enumerate(self.nick):
                 ret = ret + '"' + nick + '"'
                 if i + 1 != len(self.nick): ret = ret + char['sep']
@@ -512,7 +511,7 @@ class dstat:
                 scale = self.scales[i]
             else:
                 scale = self.scale
-            if isinstance(self.val[name], collections.Sequence) and not isinstance(self.val[name], six.string_types):
+            if isinstance(self.val[name], collections.abc.Sequence) and not isinstance(self.val[name], str):
                 line = line + cprintlist(self.val[name], ctype, self.width, scale)
                 sep = theme['frame'] + char['colon']
                 if i + 1 != len(self.vars):
-- 
2.34.1

